from math import floor, sin, cos, sqrt, atan2, asin, acos
from datetime import datetime

# Математические постоянные
pi = 3.14159265358979323846
rad_deg = 180.0 / pi
deg_rad = pi / 180.0


# Важно, чтобы величины l и m не выходили за диапазон 0÷360º.
# Для этого можно использовать следующее преобразование:
def rev(x):
    return x - floor(x / 360.0) * 360.0


def sun_position(dt, lat, lon):

    year = dt.year
    month = dt.month
    day = dt.day
    ut = dt.hour + dt.minute/60 + dt.second/3600    # Международное время в часах

    # Расчет количества целых суток прошедших от 01 января 0.0 часов 2000 г
    d = 367 * year - (7 * (year + (month + 9) // 12)) // 4 + (275 * month) // 9 + day - 730530
    # С учетом текущего времени UT
    d1 = d * 1.0 + ut / 24.0

    # Параметры орбиты Солнца (Земли)
    w = 282.9404 + 0.0000470935 * d1        # Долгота перигелия
    e = 0.016709 - 0.000000001151 * d1      # Эксцентриситет орбиты
    m = rev(356.0470 + 0.9856002585 * d1)   # Средняя аномалия
    oblecl = 23.4393 - 0.0000003563 * d1    # Наклон плоскости эклиптики

    l = rev(w + m)      # Средняя долгота Солнца
    ee = m + (180.0 / pi) * e * sin(m * deg_rad) * (1 + e * cos(m * deg_rad))    # Эксцентрическая аномалия
    x = cos(ee * deg_rad) - e
    y = sin(ee * deg_rad) * sqrt(1 - e * e)
    r = sqrt(x * x + y * y)     # Расстояние до Солнца
    v = atan2(y, x) * rad_deg   # Истинная аномалия
    longt = rev(v + w)          # Эклиптическая долгота Солнца

    # Прямоугольные эклиптические координаты Солнца
    x = r * cos(longt * deg_rad)
    y = r * sin(longt * deg_rad)
    z = 0.0

    # Прямоугольные геоцентрические координаты Солнца
    xequat = x
    yequat = y * cos(deg_rad * oblecl) - z * sin(deg_rad * oblecl)
    zequat = y * sin(deg_rad * oblecl) + z * cos(deg_rad * oblecl)

    # Экваториальные координаты Солнца
    ra = atan2(yequat, xequat) * rad_deg        # Прямое восхождение
    dec = asin(zequat / r) * rad_deg            # Склонение

    # Расчет азимутальных координат
    gmst0 = l / 15.0 + 12.0                     # Звездное время для гринвичского меридиана в 00:00h
    st = gmst0 + ut + lon / 15.0                # Местное звездное время на момент наблюдения

    if st < 0:
        st += 24.0

    if st > 24:
        st -= 24.0

    HA = st * 15.0 - ra    # Часовой угол Солнца на момент наблюдения

    # Прямоугольная система координат
    xx = cos(HA * deg_rad) * cos(dec * deg_rad)
    yy = sin(HA * deg_rad) * cos(dec * deg_rad)
    zz = sin(dec * deg_rad)

    # координаты Солнца в прямоугольной горизонтальной системе координат
    Xhor = xx * sin(lat * deg_rad) - zz * cos(lat * deg_rad)
    Yhor = yy
    Zhor = xx * cos(lat * deg_rad) + zz * sin(lat * deg_rad)

    azimut = atan2(Yhor, Xhor) * rad_deg + 180      # азимут Солнца[град]
    altitude = asin(Zhor) * rad_deg                 # высота Солнца над горизонтом[град]

    return azimut, altitude


# h = 0 градусов: центр солнечного диска касается математического горизонта
# h = -0.25 градусов: верхняя часть Солнца касается математического горизонта
# h = -0.583 градусов: центр солнечного диска касается горизонта (с учетом атмосферной рефракции)
# h = -0.833 градуса: верхняя часть Солнца касается горизонта (с учетом атмосферной рефракции)
# h = -6 градусов: гражданские сумерки (больше нельзя читать снаружи без искусственного освещения)
# h = -12 градусов: навигационные сумерки (навигация по морскому горизонту больше невозможна)
# h = -15 градусов: любительские астрономические сумерки (небо достаточно темное для большинства астрономических наблюдений)
# h = -18 градусов: астрономические сумерки (небо полностью темное)
def twilight(h, dt, lat, lon):

    year = dt.year
    month = dt.month
    day = dt.day
    ut = dt.hour + dt.minute/60 + dt.second/3600    # Международное время в часах

    # Расчет количества целых суток прошедших от 01 января 0.0 часов 2000 г
    d = 367 * year - (7 * (year + (month + 9) // 12)) // 4 + (275 * month) // 9 + day - 730530
    # С учетом текущего времени UT
    d1 = d * 1.0 + ut / 24.0

    # Параметры орбиты Солнца (Земли)
    w = 282.9404 + 0.0000470935 * d1        # Долгота перигелия
    e = 0.016709 - 0.000000001151 * d1      # Эксцентриситет орбиты
    m = rev(356.0470 + 0.9856002585 * d1)   # Средняя аномалия
    oblecl = 23.4393 - 0.0000003563 * d1    # Наклон плоскости эклиптики

    l = rev(w + m)      # Средняя долгота Солнца
    ee = m + (180.0 / pi) * e * sin(m * deg_rad) * (1 + e * cos(m * deg_rad))    # Эксцентрическая аномалия
    x = cos(ee * deg_rad) - e
    y = sin(ee * deg_rad) * sqrt(1 - e * e)
    r = sqrt(x * x + y * y)     # Расстояние до Солнца
    v = atan2(y, x) * rad_deg   # Истинная аномалия
    longt = rev(v + w)          # Эклиптическая долгота Солнца

    # Прямоугольные эклиптические координаты Солнца
    x = r * cos(longt * deg_rad)
    y = r * sin(longt * deg_rad)
    z = 0.0

    # Прямоугольные геоцентрические координаты Солнца
    xequat = x
    yequat = y * cos(deg_rad * oblecl) - z * sin(deg_rad * oblecl)
    zequat = y * sin(deg_rad * oblecl) + z * cos(deg_rad * oblecl)

    # Экваториальные координаты Солнца
    ra = atan2(yequat, xequat) * rad_deg        # Прямое восхождение
    dec = asin(zequat / r) * rad_deg            # Склонение

    gmst0 = l / 15.0 + 12.0                         # Звездное время для гринвичского меридиана в 00:00h
    ra = gmst0 + ut * 15.0 + lon                    # вычисления солнечного RA в полдень по местному времени
    UT_Sun_in_south = (ra - gmst0 - lon) / 15.0     # UT в полдень по местному времени

    cos_lha = (sin(deg_rad * h) - sin(deg_rad * lat) * sin(deg_rad * dec)) / (cos(deg_rad * lat) * cos(deg_rad * dec))

    if -1.0 <= cos_lha <= 1.0:
        hh = acos(cos_lha) / 15 + UT_Sun_in_south
        return hh
    else:
        return 0


az, h = sun_position(datetime.utcnow(), 55.275606, 37.310370)
print("Текущие координаты Солнца")
print("Азимут: %.1f°" % az)
print("Высота: %.1f°" % h)

# twilight(-18, datetime(2019, 8, 20), 55.541679, 37.517549)
